@page "/login"
@using HeliumHealthMonitor.Data.Shared.Models
@inject HttpClient Http
@inject IUserSessionInfo _userSessionInfo
@inject IConfiguration _config 
<h3>Login</h3>

<p>@message</p>

<EditForm Model="user" OnValidSubmit="OnValid" style="max-width:500px">
    <DataAnnotationsValidator/>
    <ValidSummary/>
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="user.Username" placeholder="Benutzername"></InputText>
    </div>
    <div class="mb-2">
        <InputText class="password" @bind-Value="user.Password" placeholder="Passwort"></InputText>
    </div>
    <div class="mb-2 text-right">
        <button class="btn btn-secondary" disabled="@isDisabled">login</button>
    </div>
</EditForm>

@code {
    UserLoginFormModel user = new UserLoginFormModel();
    string message = string.Empty;
    bool isDisabled = false;

    private async Task OnValid()
    {
        isDisabled = true;
        using(var msg = await Http.PostAsJsonAsync<UserLoginFormModel>($"{_config["ApiBaseAddress"]}/api/userauth/login", user,
            System.Threading.CancellationToken.None))
        {
            if (msg.IsSuccessStatusCode)
            {
                UserLoginResult result = await msg.Content.ReadFromJsonAsync<UserLoginResult>();
                message = result.Message;
                isDisabled = false;
                if (result.Success)
                {
                    _userSessionInfo.Username = result.Username;
                    _userSessionInfo.JwtBearer = result.JwtBearer;
                }
            }
        }
    }
}
