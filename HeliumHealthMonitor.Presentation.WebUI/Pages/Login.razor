@page "/login"

@using HeliumHealthMonitor.Data.Shared.Models
@using HeliumHealthMonitor.Data.MongoDBLayer.DataAccess
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject IUserSessionInfo _userSessionInfo
@inject IConfiguration _config 
@inject IUserDataAccess _userDataAccess
@inject NavigationManager _navManager

<EditForm Model="@user" OnValidSubmit="OnValid">
<DataAnnotationsValidator/>
<MudGrid>
    <MudItem xs="4">
        <MudPaper></MudPaper>
    </MudItem>
    <MudItem xs="4">
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Benutzername"
                                @bind-Value="user.Username" For="@(() => user.Username)"/>
                <MudTextField Label="Passwort" Class="mt-3"
                                @bind-Value="user.Password" For="@(() => user.Password)" InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>    
    <MudItem xs="4">
        <MudPaper></MudPaper>
    </MudItem>
</MudGrid>
</EditForm>

@code {
    UserLoginFormModel user = new UserLoginFormModel();
    string message = string.Empty;
    bool isDisabled = false;

    bool success;

    private async Task OnValid()
    {
        isDisabled = true;
        using(var msg = await Http.PostAsJsonAsync<UserLoginFormModel>($"{_config["ApiBaseAddress"]}/api/userauth/login", user,
            System.Threading.CancellationToken.None))
        {
            if (msg.IsSuccessStatusCode)
            {
                UserLoginResult result = await msg.Content.ReadFromJsonAsync<UserLoginResult>();
                message = result.Message;
                isDisabled = false;
                if (result.Success)
                {

                    _userSessionInfo.Role = result.Role;
                    _userSessionInfo.Id = result.Id;
                    _userSessionInfo.Username = result.Username;
                    _userSessionInfo.JwtBearer = result.JwtBearer;

                    _navManager.NavigateTo("/dashboard");
                }
            }
        }
        StateHasChanged();
    }
}
