@page "/fetchdata"

@using HeliumHealthMonitor.Presentation.WebUI.Data
@using HeliumHealthMonitor.Data.Shared.Models
@inject WeatherForecastService ForecastService
@inject IUserSessionInfo _userSessionInfo

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (string.IsNullOrEmpty(userdata))
{
    <p><a href="/login">Login to access this data</a></p>
}

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    string userdata = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        userdata = _userSessionInfo.Username;
        if(userdata != null)
        {
            forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        }
    }
}
